{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def insertion_sort(a):\n",
    "        zaehler = 0\n",
    "        for i in range(len(a)):\n",
    "            j=i\n",
    "            while j>0 and a[j-1] > a[j]:\n",
    "                a[j-1], a[j] = a[j], a[j-1]\n",
    "                j= j-1\n",
    "                zaehler = zaehler +1\n",
    "        return zaehler\n",
    "#main\n",
    "a=[1,5,6,4]\n",
    "print(insertion_sort(a))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "tags": [
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend",
     "outputPrepend"
    ]
   },
   "outputs": [
    {
     "output_type": "stream",
     "name": "stdout",
     "text": "anzahl der Vertauschungen: 0\n[1, 1, 5, 6, 7, 10, 20, 40, 43, 48, 123, 235]\n"
    }
   ],
   "source": [
    "import random\n",
    "zaehlliste = []\n",
    "\n",
    "def quick_sort(a):\n",
    "    return (quicksortImpl (a,0,len(a)-1))\n",
    "    \n",
    "\n",
    "def quicksortImpl(a,l,r):\n",
    "    if r > l:\n",
    "        k = partition(a, l, r,zaehlliste)\n",
    "        quicksortImpl(a,l, k-1)\n",
    "        quicksortImpl(a,k+1, r)\n",
    "    return len(zaehlliste)\n",
    "def partition (a,l,r,zaehlliste):\n",
    "    #m=random.randint(l,r)\n",
    "    m=r\n",
    "    pivot = a[m]\n",
    "    i= l\n",
    "    j= r-1\n",
    "    while True:\n",
    "        while i < r and a[i]<= pivot:\n",
    "            i= i+1\n",
    "        while j > l and a[j]>= pivot:\n",
    "            j= j-1\n",
    "        if i<j:\n",
    "            a[i], a[j]= a[j], a[i]\n",
    "        else: \n",
    "            break        \n",
    "    a[m]= a[i]\n",
    "\n",
    "    a[i]= pivot\n",
    "    return i\n",
    "#main \n",
    "a= [1,5,7,1,10,43,235,40,123,48,20,6]\n",
    "print(\"anzahl der Vertauschungen:\", quick_sort(a))\n",
    "print(a)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.0-final"
  },
  "orig_nbformat": 2,
  "kernelspec": {
   "name": "python38064bit3d5b120fb1254fb3ab7709183e9f3982",
   "display_name": "Python 3.8.0 64-bit"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}